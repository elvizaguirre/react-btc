{"ast":null,"code":"var _jsxFileName = \"/mnt/ALMACEN/TRABAJO/LAB/react-btc/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'react-data-grid/lib/styles.css';\nimport React, { useEffect, useState } from 'react';\nimport RenderGrid from './grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialRows = [{\n    side: \"BUY\",\n    price: \"Example\",\n    volume: 1.2,\n    time: \"12/12/2023 14H23\"\n  }, {\n    side: \"BUY\",\n    price: \"Demo1\",\n    volume: 1.2,\n    time: \"12/12/2023 14H23\"\n  }, {\n    side: \"BUY\",\n    price: \"Demo2\",\n    volume: 1.2,\n    time: \"12/12/2023 14H23\"\n  }, {\n    side: \"BUY\",\n    price: \"Demo3\",\n    volume: 1.2,\n    time: \"12/12/2023 14H23\"\n  }, {\n    side: \"BUY\",\n    price: \"Demo4\",\n    volume: 1.2,\n    time: \"12/12/2023 14H23\"\n  }];\n  const [rows, setRows] = useState(initialRows);\n  const [bid, setBid] = useState(\"27,000\");\n  const [ask, setAsk] = useState(\"27,001\");\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://stream.binance.com:9443/ws/btcusdt@trade\");\n    ws.onmessage = event => {\n      console.log(JSON.parse(event.data));\n    };\n    return ws.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bitcoin Infos (BTC/USDT)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"spaced\",\n            children: \"Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Ask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"txt-red\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: bid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RenderGrid, {\n      rows: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jaH/md4U0zZqjqwEDN8LqBk8+RY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","RenderGrid","jsxDEV","_jsxDEV","App","_s","initialRows","side","price","volume","time","rows","setRows","bid","setBid","ask","setAsk","ws","WebSocket","onmessage","event","console","log","JSON","parse","data","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/ALMACEN/TRABAJO/LAB/react-btc/src/App.js"],"sourcesContent":["import './App.css';\nimport 'react-data-grid/lib/styles.css';\n\nimport React, { useEffect, useState } from 'react';\n\nimport RenderGrid from './grid';\n\nfunction App() {\n  const initialRows = [\n    { side: \"BUY\", price: \"Example\", volume: 1.2, time: \"12/12/2023 14H23\" },\n    { side: \"BUY\", price: \"Demo1\", volume: 1.2, time: \"12/12/2023 14H23\" },\n    { side: \"BUY\", price: \"Demo2\", volume: 1.2, time: \"12/12/2023 14H23\" },\n    { side: \"BUY\", price: \"Demo3\", volume: 1.2, time: \"12/12/2023 14H23\" },\n    { side: \"BUY\", price: \"Demo4\", volume: 1.2, time: \"12/12/2023 14H23\" },\n  ];\n  const [rows, setRows] = useState(initialRows);\n  const [bid, setBid] = useState(\"27,000\");\n  const [ask, setAsk] = useState(\"27,001\");\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://stream.binance.com:9443/ws/btcusdt@trade\");\n    ws.onmessage = (event) => {\n      console.log(JSON.parse(event.data));\n    };\n\n    return ws.close();\n  },[]);\n\n\n  return (\n    <div className=\"App\">\n      <h2>Bitcoin Infos (BTC/USDT)</h2>\n      <table>\n        <thead>\n          <tr>\n            <td className=\"spaced\">Bid</td>\n            <td>Ask</td>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"txt-red\">\n            <td>{bid}</td>\n            <td>{ask}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <RenderGrid rows={rows} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,gCAAgC;AAEvC,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,UAAU,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAG,CAClB;IAAEC,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAmB,CAAC,EACxE;IAAEH,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAmB,CAAC,EACtE;IAAEH,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAmB,CAAC,EACtE;IAAEH,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAmB,CAAC,EACtE;IAAEH,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE,OAAO;IAAEC,MAAM,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAmB,CAAC,CACvE;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACM,WAAW,CAAC;EAC7C,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,QAAQ,CAAC;EACxC,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,QAAQ,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMkB,EAAE,GAAG,IAAIC,SAAS,CAAC,gDAAgD,CAAC;IAC1ED,EAAE,CAACE,SAAS,GAAIC,KAAK,IAAK;MACxBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,OAAOR,EAAE,CAACS,KAAK,CAAC,CAAC;EACnB,CAAC,EAAC,EAAE,CAAC;EAGL,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC7B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,eACEzB,OAAA;UAAAyB,QAAA,gBACEzB,OAAA;YAAIwB,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/B7B,OAAA;YAAAyB,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR7B,OAAA;QAAAyB,QAAA,eACEzB,OAAA;UAAIwB,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACrBzB,OAAA;YAAAyB,QAAA,EAAKf;UAAG;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACd7B,OAAA;YAAAyB,QAAA,EAAKb;UAAG;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAER7B,OAAA,CAACF,UAAU;MAACU,IAAI,EAAEA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAAC3B,EAAA,CA3CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}